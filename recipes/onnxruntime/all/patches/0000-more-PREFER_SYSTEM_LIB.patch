--- a/cmake/CMakeLists.txt
+++ b/cmake/CMakeLists.txt
@@ -657,21 +657,44 @@
 get_filename_component(REPO_ROOT "${REPO_ROOT}" ABSOLUTE)
 set(ONNXRUNTIME_INCLUDE_DIR ${REPO_ROOT}/include/onnxruntime)
 
-add_subdirectory(external/date EXCLUDE_FROM_ALL)
+if(onnxruntime_PREFER_SYSTEM_LIB)
+  find_package(date REQUIRED)
+  add_library(date_interface INTERFACE)
+  target_include_directories(date_interface INTERFACE ${date_INCLUDE_DIRS})
+else()
+  add_subdirectory(external/date EXCLUDE_FROM_ALL)
+endif()
 
-set(SAFEINT_INCLUDE_DIR ${REPO_ROOT}/cmake/external/SafeInt)
+if(onnxruntime_PREFER_SYSTEM_LIB)
+  find_package(safeint REQUIRED)
+  set(SAFEINT_INCLUDE_DIR ${safeint_INCLUDE_DIRS})
+else()
+  set(SAFEINT_INCLUDE_DIR ${REPO_ROOT}/cmake/external/SafeInt)
+endif()
 add_library(safeint_interface INTERFACE)
 target_include_directories(safeint_interface INTERFACE ${SAFEINT_INCLUDE_DIR})
 
-set(OPTIONAL_LITE_INCLUDE_DIR ${REPO_ROOT}/cmake/external/optional-lite/include)
+if(onnxruntime_PREFER_SYSTEM_LIB)
+  find_package(optional-lite REQUIRED)
+  set(OPTIONAL_LITE_INCLUDE_DIR ${nonstd_INCLUDE_DIRS})
+else()
+  set(OPTIONAL_LITE_INCLUDE_DIR ${REPO_ROOT}/cmake/external/optional-lite/include)
+endif()
 if(onnxruntime_DISABLE_EXCEPTIONS)
   add_compile_definitions(optional_CONFIG_NO_EXCEPTIONS=1)
 endif()
 
-add_subdirectory(external/mp11 EXCLUDE_FROM_ALL)
+if(onnxruntime_PREFER_SYSTEM_LIB)
+  find_package(Boost REQUIRED headers)
+  include_directories(${Boost_INCLUDE_DIRS})
+  add_library(Boost::mp11 ALIAS Boost::headers)
+else()
+  add_subdirectory(external/mp11 EXCLUDE_FROM_ALL)
+endif()
 
 if(onnxruntime_PREFER_SYSTEM_LIB)
   find_package(re2)
+  set(RE2_INCLUDE_DIR ${re2_INCLUDE_DIRS})
 endif()
 if(NOT TARGET re2::re2)
   add_subdirectory(external/re2 EXCLUDE_FROM_ALL)
@@ -913,19 +936,22 @@
   set(ONNX_USE_LITE_PROTO OFF CACHE BOOL "" FORCE)
 endif()
 
-if (NOT onnxruntime_MINIMAL_BUILD)
-  add_subdirectory(external/onnx EXCLUDE_FROM_ALL)
-else()
-  include(onnx_minimal)
-endif()
+if(onnxruntime_PREFER_SYSTEM_LIB)
+  find_package(ONNX REQUIRED)
+else()
+  if(NOT onnxruntime_MINIMAL_BUILD)
+    add_subdirectory(external/onnx EXCLUDE_FROM_ALL)
+  else()
+    include(onnx_minimal)
+  endif()
 
-target_compile_definitions(onnx PUBLIC $<TARGET_PROPERTY:onnx_proto,INTERFACE_COMPILE_DEFINITIONS> PRIVATE "__ONNX_DISABLE_STATIC_REGISTRATION")
-if (NOT onnxruntime_USE_FULL_PROTOBUF)
-  target_compile_definitions(onnx PUBLIC "__ONNX_NO_DOC_STRINGS")
-endif()
-set_target_properties(onnx PROPERTIES FOLDER "External/ONNX")
+  target_compile_definitions(onnx PUBLIC $<TARGET_PROPERTY:onnx_proto,INTERFACE_COMPILE_DEFINITIONS> PRIVATE "__ONNX_DISABLE_STATIC_REGISTRATION")
+  if (NOT onnxruntime_USE_FULL_PROTOBUF)
+    target_compile_definitions(onnx PUBLIC "__ONNX_NO_DOC_STRINGS")
+  endif()
+  set_target_properties(onnx PROPERTIES FOLDER "External/ONNX")
 set_target_properties(onnx_proto PROPERTIES FOLDER "External/ONNX")
-
+endif()
 
 # fix a warning in onnx code we can't do anything about
 if (MSVC)
@@ -947,7 +947,14 @@
 set(FLATBUFFERS_INSTALL OFF CACHE BOOL "FLATBUFFERS_INSTALL" FORCE)
 set(FLATBUFFERS_BUILD_FLATHASH OFF CACHE BOOL "FLATBUFFERS_BUILD_FLATHASH" FORCE)
 set(FLATBUFFERS_BUILD_FLATLIB ON CACHE BOOL "FLATBUFFERS_BUILD_FLATLIB" FORCE)
-add_subdirectory(external/flatbuffers EXCLUDE_FROM_ALL)
+if(onnxruntime_PREFER_SYSTEM_LIB)
+  find_package(Flatbuffers REQUIRED)
+  add_library(flatbuffers INTERFACE)
+  target_include_directories(flatbuffers INTERFACE ${flatbuffers_INCLUDE_DIRS})
+  target_link_libraries(flatbuffers INTERFACE ${flatbuffers_LIBRARIES})
+else ()
+  add_subdirectory(external/flatbuffers EXCLUDE_FROM_ALL)
+endif()
 list(APPEND onnxruntime_EXTERNAL_DEPENDENCIES flatbuffers)
 list(APPEND onnxruntime_EXTERNAL_LIBRARIES flatbuffers)
 
@@ -1432,7 +1439,11 @@
   list(APPEND onnxruntime_EXTERNAL_LIBRARIES OpenMP::OpenMP_CXX)
 endif()
 
-if(WIN32)
+if(onnxruntime_PREFER_SYSTEM_LIB)
+  find_package(nsync REQUIRED)
+  list(APPEND onnxruntime_EXTERNAL_LIBRARIES nsync::nsync_cpp)
+  include_directories(${nsync_INCLUDE_DIRS})
+elseif(WIN32)
   list(APPEND onnxruntime_EXTERNAL_LIBRARIES ${SYS_PATH_LIB} Shlwapi)
   list(APPEND onnxruntime_EXTERNAL_LIBRARIES debug Dbghelp)
 else()
